1st Query
select distinct invoicedate, sum(quantity) over (partition by invoicedate) as
dailysales
from tableretail
order by invoicedate;

2nd Query
select stockcode,
 totalquantity,
 rank() over (order by totalquantity desc) as rank
from (select stockcode,
 sum(quantity) as totalquantity
 from tableretail
 group by stockcode
 order by sum(quantity) desc
 ) subquery
where rownum <= 10;

3rd Query
select country,
 sum(quantity * price) as revenue,
 dense_rank() over (order by sum(quantity * price) desc) as
rank
from tableretail
group by country
order by revenue desc;

4th Query
with customerspending as (
 select customer_id, sum(quantity * price) as totalspending
 from tableretail
 group by customer_id
)
select customer_id, totalspending,
 rank() over (order by totalspending desc) as spendingrank
from customerspending;

5th Query
with productrevenue as (
 select stockcode,
 quantity * price as revenue,
 row_number() over (partition by stockcode order by (quantity * 
price) desc) as ranking
 from tableretail
)
select stockcode, revenue
from productrevenue
where ranking = 1;

6th Query
with purchasetimes as (
 select
 to_date(invoicedate, 'MM/DD/YYYY HH24:MI') as most_purchase_time,
 count(*) as purchasecount,
 rank() over (order by count(*) desc) as rankbypurchasecount
 from
 tableretail
 where
 country = 'United Kingdom'
 group by
 to_date(invoicedate, 'MM/DD/YYYY HH24:MI')
)
select
 most_purchase_time
from
 purchasetimes
where
 rankbypurchasecount = 1;

7th Query
select
 customer_id,
 invoicedate,
 total_sales,
 avg(total_sales) over (
 partition by customer_id
 order by to_date(invoicedate, 'MM/DD/YYYY HH24:MI')
 rows between 90 preceding and current row
 ) as moving_avg_sales
from (
 select
 customer_id,
 invoicedate,
 total_sales
 from (
 select
 customer_id,
 invoicedate,
 sum(quantity * price) over (partition by customer_id order by
to_date(invoicedate, 'MM/DD/YYYY HH24:MI')) as total_sales,
 row_number() over (partition by customer_id order by
to_date(invoicedate, 'MM/DD/YYYY HH24:MI')) as row_num
 from
 tableretail
 ) salesdata
 where row_num = 1
) earlysalesdata;

8th Query
with lag_lead as (
 select t.*
,
 lag(quantity) over (partition by invoice order by to_date(invoicedate,
'MM/DD/YYYY HH24:MI')) as lag_quantity,
 lead(quantity) over (partition by invoice order by
to_date(invoicedate, 'MM/DD/YYYY HH24:MI')) as lead_quantity
 from tableretail t
),
stats as (
 select stockcode,
 count(distinct price) as distinct_prices,
 avg(price) as avg_price,
 case when count(distinct price) <= 1 then 0 else stddev_pop(price)
end as std_dev_price,
 case when count(distinct price) <= 1 then 0 else variance(price) end
as variance_price
 from tableretail
 group by stockcode
)
select
 s.stockcode,
 
s.distinct_prices,
 round(s.avg_price, 2) as avg_price,
 round(s.std_dev_price, 2) as std_dev_price,
 round(s.variance_price, 2) as variance_price,
 round(covar_pop(ll.quantity, ll.price), 2) as covariance,
 round(corr(ll.quantity, ll.price), 2) as correlation
from stats s
left join lag_lead ll on s.stockcode = ll.stockcode
group by s.stockcode, s.distinct_prices, s.avg_price, s.std_dev_price,
s.variance_price;